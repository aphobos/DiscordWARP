#!/bin/bash
# Создаем директорию для хранения конфигурационного файла
CONFIG_DIR="/etc/discordwarp"
CONFIG_FILE="$CONFIG_DIR/DiscordWARP.conf"

# Проверяем, существует ли директория, если нет - создаем её
if [ ! -d "$CONFIG_DIR" ]; then
    mkdir -p "$CONFIG_DIR"
fi
clear
mkdir -p ~/.cloudshell && touch ~/.cloudshell/no-apt-get-warning
echo "Установка зависимостей..."
sudo apt-get update -y --fix-missing && sudo apt-get install wireguard-tools jq -y --fix-missing

priv="${1:-$(wg genkey)}"
pub="${2:-$(echo "${priv}" | wg pubkey)}"
api="https://api.cloudflareclient.com/v0i1909051800"
ins() { curl -s -H 'user-agent:' -H 'content-type: application/json' -X "$1" "${api}/$2" "${@:3}"; }
sec() { ins "$1" "$2" -H "authorization: Bearer $3" "${@:4}"; }
response=$(ins POST "reg" -d "{\"install_id\":\"\",\"tos\":\"$(date -u +%FT%T.000Z)\",\"key\":\"${pub}\",\"fcm_token\":\"\",\"type\":\"ios\",\"locale\":\"en_US\"}")

id=$(echo "$response" | jq -r '.result.id')
token=$(echo "$response" | jq -r '.result.token')
response=$(sec PATCH "reg/${id}" "$token" -d '{"warp_enabled":true}')
peer_pub=$(echo "$response" | jq -r '.result.config.peers[0].public_key')
peer_endpoint=$(echo "$response" | jq -r '.result.config.peers[0].endpoint.host')
client_ipv4=$(echo "$response" | jq -r '.result.config.interface.addresses.v4')
client_ipv6=$(echo "$response" | jq -r '.result.config.interface.addresses.v6')
port=$(echo "$peer_endpoint" | sed 's/.*:\([0-9]*\)$/\1/')
peer_endpoint=$(echo "$peer_endpoint" | sed 's/\(.*\):[0-9]*/162.159.193.5/')

conf=$(cat <<-EOM
[Interface]
PrivateKey = ${priv}
S1 = 0
S2 = 0
Jc = 120
Jmin = 23
Jmax = 911
H1 = 1
H2 = 2
H3 = 3
H4 = 4
Address = ${client_ipv4}, ${client_ipv6}
DNS = 1.1.1.1, 2606:4700:4700::1111, 1.0.0.1, 2606:4700:4700::1001

[Peer]
PublicKey = ${peer_pub}
AllowedIPs = 5.45.0.0/16, 5.200.14.249/32, 8.8.4.0/24, 8.8.8.0/24, 8.34.0.0/16, 8.35.0.0/16, 23.236.0.0/16, 23.251.0.0/16, 31.13.0.0/16, 34.0.0.0/16, 34.0.0.0/10, 34.64.0.0/10, 35.184.0.0/13, 35.192.0.0/14, 35.196.0.0/15, 35.198.0.0/16, 35.199.0.0/17, 35.200.0.0/13, 35.207.0.0/16, 35.208.0.0/12, 35.214.0.0/16, 35.217.0.0/16, 35.219.0.0/16, 45.64.0.0/16, 46.19.0.0/16, 57.144.0.0/16, 64.18.0.0/16, 64.233.0.0/16, 64.233.160.0/19, 66.102.0.0/20, 66.102.0.0/16, 66.22.0.0/16, 66.220.0.0/16, 66.249.0.0/16, 68.66.0.0/16, 70.32.0.0/16, 72.14.0.0/16, 72.52.0.0/16, 74.114.0.0/16, 74.119.0.0/16, 74.125.0.0/16, 81.29.0.0/16, 83.174.0.0/16, 84.15.0.0/16, 87.245.0.0/16, 91.213.0.0/16, 92.46.0.0/16, 94.140.0.0/16, 103.4.0.0/16, 103.4.96.0/22, 104.18.0.0/16, 104.21.0.0/16, 104.31.0.0/16, 104.32.0.0/16, 104.132.0.0/16, 104.133.0.0/16, 104.134.0.0/15, 104.156.0.0/16, 104.237.0.0/16, 108.59.0.0/16, 108.170.0.0/16, 108.177.0.0/15, 108.177.0.0/16, 108.177.8.0/21, 108.177.15.95/32, 124.108.0.0/16, 129.134.0.0/16, 130.211.0.0/16, 136.112.0.0/12, 142.250.0.0/15, 142.250.0.0/16, 142.251.0.0/16, 146.148.0.0/16, 157.240.0.0/16, 162.159.0.0/16, 162.216.0.0/16, 162.222.0.0/16, 172.67.0.0/16, 172.110.0.0/16, 172.217.0.0/16, 172.253.0.0/16, 173.194.0.0/16, 173.252.0.0/16, 173.255.0.0/16, 176.97.0.0/16, 185.38.0.0/16, 185.38.0.76/31, 185.53.0.0/16, 185.60.0.0/16, 185.89.0.0/16, 185.214.0.0/16, 188.114.0.0/16, 190.115.0.0/16, 192.158.0.0/16, 192.178.0.0/15, 193.46.0.0/16, 193.186.0.0/16, 194.110.0.0/16, 195.123.0.0/16, 199.36.0.0/16, 199.192.0.0/16, 199.223.0.0/16, 204.15.0.0/16, 207.223.0.0/16, 208.65.0.0/16, 208.68.0.0/16, 208.81.0.0/16, 208.117.0.0/16, 209.85.0.0/16, 209.85.128.0/17, 216.40.0.0/16, 216.58.0.0/16, 216.58.192.0/19, 216.58.192.0/18, 216.239.0.0/16, 216.239.32.0/19, 217.168.0.0/16
Endpoint = ${peer_endpoint}:${port}
EOM
)

clear
echo -e "\n\n\n"
[ -t 1 ] && echo "########## НАЧАЛО КОНФИГА ##########"
echo "${conf}"
[ -t 1 ] && echo "########### КОНЕЦ КОНФИГА ###########"

conf_base64=$(echo -n "${conf}" | base64 -w 0)
echo "Скачать конфиг файлом: https://aphobos.github.io/DiscordWARP/downloader.html?filename=DiscordWARP.conf&content=${conf_base64}"

# Проверяем успешность выполнения
if [ -f "$CONFIG_FILE" ]; then
    echo "Конфигурационный файл успешно создан: $CONFIG_FILE"
else
    echo "Ошибка при создании конфигурационного файла"
    exit 1
fi
